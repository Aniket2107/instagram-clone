{"version":3,"sources":["firebase.js","Components/Posts.js","Components/UploadFiles.js","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","Posts","postId","user","username","caption","imageUrl","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","src","alt","cmt","text","type","placeholder","onChange","e","target","value","disabled","onClick","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","UploadFiles","setCaption","image","setImage","progress","setProgress","max","files","Button","ref","name","put","on","pgrs","Math","round","bytesTransferres","totalBytes","error","alert","message","child","getDownloadURL","then","url","timestamps","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","border","boxShadow","padding","App","classes","React","modalStyle","posts","setPosts","open","setOpen","loginOpen","setLoginOpen","setUsername","email","setEmail","password","setPassword","setUser","onAuthStateChanged","authUser","console","log","updateProfile","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","athUser","catch","signInWithEmailAndPassword","res","classsName","signOut","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cd971f0.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyDfaqzncFC6GW8NZMJ0WVyb2SI6FCRdCy8\",\r\n  authDomain: \"instagram-clone-95dc2.firebaseapp.com\",\r\n  databaseURL: \"https://instagram-clone-95dc2.firebaseio.com\",\r\n  projectId: \"instagram-clone-95dc2\",\r\n  storageBucket: \"instagram-clone-95dc2.appspot.com\",\r\n  messagingSenderId: \"504276109312\",\r\n  appId: \"1:504276109312:web:437e6dc1da2f27f97670e5\",\r\n  measurementId: \"G-HG7B80GMR8\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();\r\nconst storage = firebaseApp.storage();\r\n\r\nexport { db, auth, storage };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Posts.css\";\r\n\r\nconst Posts = ({ postId, user, username, caption, imageUrl }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let unsubscribe;\r\n    if (postId) {\r\n      unsubscribe = db\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"comments\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setComments(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [postId]);\r\n\r\n  const addComment = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n      text: comment,\r\n      username: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setComment(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post_header\">\r\n        <Avatar className=\"post_avatar\" src=\"\" alt=\"postAvatar\" />\r\n        <h3>{username}</h3>\r\n      </div>\r\n      <img className=\"post_image\" src={imageUrl} alt=\"postimg\" />\r\n      <h4 className=\"post_text\">\r\n        <strong>{username}</strong> : {caption}\r\n      </h4>\r\n\r\n      <div className=\"post_comments\">\r\n        {comments.map((cmt) => {\r\n          return (\r\n            <span>\r\n              <strong>{cmt.username}</strong> {cmt.text}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      {user && (\r\n        <form className=\"post_commentBox\">\r\n          <input\r\n            className=\"post_input\"\r\n            type=\"text\"\r\n            placeholder=\"Add a comment\"\r\n            onChange={(e) => setComment(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"post_button\"\r\n            disabled={!comment}\r\n            type=\"submit\"\r\n            onClick={addComment}\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { storage, db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport \"./ImageUpload.css\";\r\n\r\nfunction UploadFiles({ username }) {\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const handlefileChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmitFile = () => {\r\n    const UploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n    UploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const pgrs = Math.round(\r\n          (snapshot.bytesTransferres / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(pgrs);\r\n      },\r\n      (error) => {\r\n        //console.log(error);\r\n        alert(error.message);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            db.collection(\"posts\").add({\r\n              timestamps: firebase.firestore.FieldValue.serverTimestamp(),\r\n              caption: caption,\r\n              imageUrl: url,\r\n              username: username,\r\n            });\r\n            setProgress(0);\r\n            setImage(null);\r\n            setCaption(\"\");\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"imageUpload\">\r\n      <center>\r\n        <h3>Upload your photos and share with your friends :) </h3>\r\n      </center>\r\n      <p>Progress bar</p>\r\n      <progress className=\"imageUpload_progress\" value={progress} max=\"100\" />\r\n      <br />\r\n      <p>Caption field</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a caption..\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n      />\r\n      <br />\r\n      <p>Add your favourite photos here! and upload </p>\r\n      <input type=\"file\" onChange={handlefileChange} />\r\n      <br />\r\n      <Button onClick={onSubmitFile}>Upload</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadFiles;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Posts from \"./Components/Posts\";\nimport UploadFiles from \"./Components/UploadFiles\";\nimport { db, auth } from \"./firebase\";\nimport { Modal, makeStyles, Button, Input } from \"@material-ui/core\";\n\nconst getModalStyle = () => {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}% , -${left}%)`,\n  };\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 500,\n    backgroundColor: \"white\",\n    border: \"2px solid #000\",\n    boxShadow: \"theme.shadow[5]\",\n    padding: \"5px\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loginOpen, setLoginOpen] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        console.log(authUser);\n        setUser(authUser);\n\n        if (authUser.displayName) {\n          //Do not update anything\n        } else {\n          return authUser.updateProfile({\n            displayName: username,\n          });\n        }\n      } else {\n        setUser(null);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamps\", \"desc\")\n      .onSnapshot((snapshot) => {\n        // setPosts(snapshot.docs.map((doc) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []);\n\n  const signUp = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((athUser) => {\n        alert(\"User registered\");\n        return athUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((error) => alert(error.message));\n\n    setOpen(false);\n  };\n\n  const signIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((res) => alert(\"User LoggedIn! \"))\n      .catch((error) => alert(error.message));\n\n    setLoginOpen(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app_form\">\n            <center>\n              <img\n                className=\"app_headerImage\"\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"insta-logo\"\n              />\n            </center>\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button onClick={signUp}>Register</Button>\n          </form>\n        </div>\n      </Modal>\n\n      {/* Login Modal */}\n      <Modal open={loginOpen} onClose={() => setLoginOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app_form\">\n            <center>\n              <img\n                className=\"app_headerImage\"\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"insta-logo\"\n              />\n            </center>\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button onClick={signIn}>Login</Button>\n          </form>\n        </div>\n      </Modal>\n\n      {/* End of login modal */}\n      <div className=\"app_header\">\n        <img\n          classsName=\"app_headerImage\"\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt=\"insta logo\"\n        />\n        {user ? (\n          <Button onClick={() => auth.signOut()}>Logout</Button>\n        ) : (\n          <div>\n            <Button onClick={() => setLoginOpen(true)}>Login</Button>\n            <Button onClick={() => setOpen(true)}>Register</Button>\n          </div>\n        )}\n      </div>\n      <div className=\"app_postsDisplay\">\n        {posts.map(({ id, post }) => {\n          return (\n            <Posts\n              key={id}\n              postId={id}\n              user={user}\n              username={post.username}\n              caption={post.caption}\n              imageUrl={post.imageUrl}\n            />\n          );\n        })}\n      </div>\n      {user?.displayName ? (\n        <UploadFiles username={user.displayName} />\n      ) : (\n        <h3>login to upload</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}